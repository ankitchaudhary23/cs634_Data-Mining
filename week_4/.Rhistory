cars[i]$nor<- 3
}
if (cars[i,1]=='low') {
cars[i]$nor<- 4
}
}
for (i in 1:length(cars$buying)) {
#print(i)
if (cars[i,1]=='vhigh') {
cars[i,8]<- 1
}
if (cars[i,1]=='high') {
cars[i,8]<- 2
}
if (cars[i,1]=='med') {
cars[i,8]<- 3
}
if (cars[i,1]=='low') {
cars[i,]<- 4
}
}
cars[duplicated(cars),]
cars<- read.table("car.csv", sep=',', header = T, na.rm=T)
cars[unique(cars),]
cars[unique(cars),]
unique(cars)
cars[duplicated(cars[c(1,7)]),]
duplicated(cars[,1:2])
duplicated(cars[,1:7])
duplicated(cars[cars[,1:7]])
duplicated(cars[,cars[,1:7]])
rnorm(cars$buying)
cars %>% distinct(buying, maint, doors, persons, , .keep_all = TRUE)
cars %>% distinct(buying, maint, doors, persons, safety, lug_boot , .keep_all = TRUE)
cars %>% distinct(buying, maint, doors, persons, safety, lug_boot ,class, .keep_all = TRUE)
install.packages("cluster")
library("cluster", lib.loc="/usr/local/lib/R/3.5/site-library")
daisy(cars)
cars<- read.table("car.csv", sep=',', header = T, na.rm=T)
cars<- read.table("car.csv", sep=',', header = T, na.rm=T)
cars<- read.table("car.csv", sep=',', header = T)
cars<- read.table("car.csv", sep=',', header = T)
class(cars)
daisy(cars)
cars<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
str(cars)
head(cars,10)
as.numeric(cars)
d.agr <- daisy(agriculture, metric = "euclidean", stand = FALSE)
d.agr
str(agriculture)
head(agriculture)
d.agr <- daisy(cars, metric = "euclidean", stand = FALSE)
cars<- read.table("car.csv", sep=',', header = T)
d.agr <- daisy(cars, metric = "euclidean", stand = FALSE)
d.agr <- daisy(cars, metric = "gower", stand = FALSE)
d.agr
as.numeric(cars)
cars<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
head(cars,10)
as.numeric(cars)
cars<- read.table("car.csv", sep=',', header = T)
recode(cars)
recode(cars$buying)
head(agriculture)
str(agriculture)
head(agriculture)
d.agr <- daisy(agriculture, metric = "euclidean", stand = FALSE)
d.agr
summary(cars)
d.agr <- daisy(agriculture, metric = "euclidean", stand = FALSE)
d.agr
as.matrix(d.agr)[,"DK"]
as.matrix(daisy(agriculture, metric = "gower"))
daisy(cars)
as.matrix(daisy(cars,metric = 'gower'))
head(flower)
daisy(flower)
f<- flower
View(f)
View(f)
head(flower)
head(cars)
as.numeric(cars$buying)
View(cars)
View(cars)
recode(cars$buying)
recode(as.numeric(cars$buying))
as.numeric(cars$maint)
cars<- read.table("car.csv", sep=',', header = T)
class(cars)
str(cars)
cars<- read.table("car.csv", sep=',', header = T,stringsAsFactors = F)
class(cars)
str(cars)
as.numeric(cars)
as.numeric(cars$buying)
cars<- read.table("car.csv", sep=',', header = T)
as.numeric(cars$buying)
as.numeric(cars$maint)
cars<- read.table("car.csv", sep=',', header = T, numeric(1:7))
cars<- read.table("car.csv", sep=',', header = T, numeric(1:6))
cars$buying<- as.numeric(cars$buying)
cars$maint<- as.numeric(cars$maint)
cars$buying<- as.numeric(cars$buying)
cars$maint<- as.numeric(cars$maint)
cars$doors<- as.numeric(cars$doors)
cars$persons<- as.numeric(cars$persons)
cars$lug_boot<- as.numeric(cars$lug_boot)
cars$safety<- as.numeric(cars$safety)
cars$class<- as.numeric(cars$class)
daisy(cars)
as.matrix(daisy(cars,metric = 'gower'))
data.frame(as.matrix(daisy(cars,metric = 'gower')))
data.frame(as.matrix(daisy(cars,metric = 'gower')))
df<-data.frame(as.matrix(daisy(cars,metric = 'gower')))
df
View(df)
max(df)
min(df)
min(df, -df[1=j])
as.matrix(daisy(cars,metric = 'gower'))
a<- as.matrix(daisy(cars,metric = 'gower'))
min(a)
max(a)
?dissimilarity
??dissimilarity
class(a)
apply(a, 1, FUN = function(x) {min(x[x > 0])})
df<-data.table(as.matrix(daisy(cars,metric = 'gower')))
View(df)
View(df)
sort(a)
a %>% sort(a)
sort(a) %>% min(a)
sort(a) %>% min(a>0)
sort(a) %>% max()
sort(a) %>% which(max())
sort(a) %>% which[max()]
sort(a) %>% which(max())
sort(a) %>% which.max()
sort(a) %>% which(a !=0, arr.ind = T)
sort(a) %>% which(a !=0)
sort(a) %>% which(a)
sort(a) %>% which(a[][])
max(df)
unique(df)
View(a)
View(a)
count(unique(cars$buying))
unique(cars$buying)
unique(cars$buying==4)
count(unique(cars$buying==4))
count(cars$buying==4)
length(unique(cars$buying==4))
length(unique(cars$buying))
library(data.table)
library (cluster)
dtCars <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
View(dtCars)
View(dtCars)
dtCars$V1[dtCars$V1 == "vhigh"] <- 1
dtCars$V1[dtCars$V1 == "high"] <- 2
dtCars$V1[dtCars$V1 == "med"] <- 3
dtCars$V1[dtCars$V1 == "low"] <- 4
class(dtCars$V1)
dtCars <- transform(dtCars, V1 = as.numeric(V1)) #change the column datatype to numeric
class(dtCars$V1)
dtCars$V1[dtCars$V1 == 1] <- (1-1)/(4-1)
dtCars <- read.table("car.csv", sep=',', header = T, numeric(1:6))
dtCars <- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
setwd("/Users/ankitchaudhary/Documents/IS_Sem1/Data_Mining/week_4/")
library(data.table)
library (cluster)
dtCars <- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
cars <- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
cars$V1[cars$V1 == "vhigh"] <- 1
cars$V1[cars$V1 == "high"] <- 2
cars$V1[cars$V1 == "med"] <- 3
cars$V1[cars$V1 == "low"] <- 4
cars <- read.table("car.csv", sep=',', header = T)
cars$V1[cars$V1 == "vhigh"] <- 1
cars$V1[cars$V1 == "vhigh"] <- 1
cars <- data.frame("car.csv", sep=',', header = T)
cars$V1[cars$V1 == "vhigh"] <- 1
cars <- read.table("car.csv", sep=',', header = T, as.numeric(1:6))
cars <- read.table("car.csv", sep=',', header = T, as.numeric(1:7))
cars <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
cars$V1[cars$V1 == "vhigh"] <- 1
View(cars)
cars <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
View(cars)
View(cars)
cars <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
cars<- read.table("car.csv", sep=',', header = T, numeric(1:6))
cars<- read.table("car.csv", sep=',', header = T)
ing)
cars$buying<- as.numeric(cars$buying)
View(cars)
car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
View(car)
cars$V1[cars$V1 == "vhigh"] <- 1
cars$V1[cars$V1 == "vhigh"] <- 1
car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
car$V1[cars$V1 == "vhigh"] <- 1
#car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
car<- read.table("car.csv", sep=',', header = T)
car$buying[cars$buying == "vhigh"] <- 1
#car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
car<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
car$buying[cars$buying == "vhigh"] <- 1
car$buying[cars$buying == "high"] <- 2
car$buying[cars$buying == "med"] <- 3
car$buying[cars$buying == "low"] <- 4
class(car$buying)
car <- transform(car, buying = as.numeric(buying)) #change the column datatype to numeric
class(car)
class(car$buying)
#car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
car<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
#car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
car<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
View(car)
class(car)
str(car)
car$buying[cars$buying == "vhigh"] <- 1
car$buying[cars$buying == "high"] <- 2
car$buying[cars$buying == "med"] <- 3
car$buying[cars$buying == "low"] <- 4
class(car$buying)
car <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
dtCars$V1[dtCars$V1 == "vhigh"] <- 1
dtCars <- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
dtCars$V1[dtCars$V1 == "vhigh"] <- 1
View(dtCars)
class(dtCars)
str(dtCars)
car<- read.table("car.csv", sep=',', header = T, stringsAsFactors = F)
class(car)
str(car)
car<- data.frame("car.csv", sep=',', header = T, stringsAsFactors = F)
class(car)
str(car)
View(car)
car<- read.csv("car.csv", sep=',', header = T, stringsAsFactors = F)
class(car)
str(car)
car$buying[cars$buying == "vhigh"] <- 1
car<- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
class(car)
str(car)
car$V1[car$V1 == "vhigh"] <- 1
View(car)
View(dtCars)
car$V1[car$V1 == "vhigh"] <- 1
car$V1[car$V1 == "high"] <- 2
car$V1[car$V1 == "med"] <- 3
car$V1[car$V1 == "low"] <- 4
car <- transform(car, buying = as.numeric(buying))
car <- transform(car, V1 = as.numeric(buying))
car <- transform(car, V1 = as.numeric(V1))
dtCars$V2[dtCars$V2 == "vhigh"] <- 1
dtCars$V2[dtCars$V2 == "vhigh"] <- 1
dtCars$V2[dtCars$V2 == "high"] <- 2
dtCars$V2[dtCars$V2 == "med"] <- 3
dtCars$V2[dtCars$V2 == "low"] <- 4
str(dt$V2)
car$V2[car$V2 == "vhigh"] <- 1
car$V2[car$V2 == "high"] <- 2
car$V2[car$V2 == "med"] <- 3
car$V2[car$V2 == "low"] <- 4
str(car$V2)
str(car$V1)
car$V2 <- as.numeric(V2)
car$V2 <- as.numeric(car$V2)
str(car$V2)
str(car)
car$V1 <- as.numeric(car$V1)
car<- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
class(car)
str(car)
car$V1[car$V1 == "vhigh"] <- 1
car$V1[car$V1 == "high"] <- 2
car$V1[car$V1 == "med"] <- 3
car$V1[car$V1 == "low"] <- 4
str(car$V1)
car$V1 <- as.numeric(car$V1)
View(dtCars)
car<- fread('http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
class(car)
str(car)
car$V1[car$V1 == "vhigh"] <- 1
car$V1[car$V1 == "high"] <- 2
car$V1[car$V1 == "med"] <- 3
car$V1[car$V1 == "low"] <- 4
str(car$V1)
car$V1 <- as.numeric(car$V1)
str(car)
car$V1[car$V1 == "vhigh"] <- 1
car$V1[car$V1 == "high"] <- 2
car$V1[car$V1 == "med"] <- 3
car$V1[car$V1 == "low"] <- 4
str(car$V1)
car$V1 <- as.numeric(car$V1)
car$V2[car$V2 == "vhigh"] <- 1
car$V2[car$V2 == "high"] <- 2
car$V2[car$V2 == "med"] <- 3
car$V2[car$V2 == "low"] <- 4
str(car$V2)
car$V2 <- as.numeric(car$V2)
car$V3[car$V3 == "2"] <- 1
car$V3[car$V3 == "3"] <- 2
car$V3[car$V3 == "4"] <- 3
car$V3[car$V3 == "5more"] <- 4
str(car$V3)
car$V3 <- as.numeric(car$V3)
car$V4[car$V4 == "2"] <- 1
car$V4[car$V4 == "4"] <- 2
car$V4[car$V4 == "more"] <- 3
str(car$V4)
car$V4 <- as.numeric(car$V4)
car$V5[car$V5 == "small"] <- 1
car$V5[car$V5 == "med"] <- 2
car$V5[car$V5 == "big"] <- 3
str(car$V5)
car$V5 <- as.numeric(car$V5)
car$V6[car$V6 == "low"] <- 1
car$V6[car$V6 == "med"] <- 2
car$V6[car$V6 == "high"] <- 3
str(car$V6)
car$V6 <- as.numeric(car$V6)
car$V7[car$V7 == "unacc"] <- 1
car$V7[car$V7 == "acc"] <- 2
car$V7[car$V7 == "good"] <- 3
car$V7[car$V7 == "vgood"] <- 4
str(car$V7)
car$V7 <- as.numeric(car$V7)
str(car)
str(cars)
cars<- read.table("car.csv", sep=',', header = T)
str(cars)
cars$buying<- as.numeric(cars$buying)
str(cars)
car$V1[car$V1 == 1] <- (1-1)/(4-1)
car$V1[car$V1 == 2] <- (2-1)/(4-1)
car$V1[car$V1 == 3] <- (3-1)/(4-1)
car$V1[car$V1 == 4] <- (4-1)/(4-1)
if(car$V1[car$V1 == 1] | car$V2[car$V2 == 1] | car$V3[car$V3 == 1] | car$V7[car$V7 == 1] ){
car$V1[car$V1 == 1] <- (1-1)/(4-1)
car$V2[car$V2 == 1] <- (1-1)/(4-1)
car$V3[car$V3 == 1] <- (1-1)/(4-1)
car$V7[car$V7 == 1] <- (1-1)/(4-1)
}
if(car$V1[car$V1 == 1] | car$V2[car$V2 == 1] | car$V3[car$V3 == 1] | car$V7[car$V7 == 1] ){
car$V1[car$V1 == 1] <- (1-1)/(4-1)
}
var1<- (1-1)/(4-1)
var2<- (2-1)/(4-1)
var3<- (3-1)/(4-1)
var4<- (4-1)/(4-1)
car$V1[car$V1 == 1] <- var1
car$V1[car$V1 == 2] <- var2
car$V1[car$V1 == 3] <- var3
car$V1[car$V1 == 4] <- var4
car$V2[car$V2 == 1] <- var1
car$V2[car$V2 == 2] <- var2
car$V2[car$V2 == 3] <- var3
car$V2[car$V2 == 4] <- var4
car$V3[car$V3 == 1] <- var1
car$V3[car$V3 == 2] <- var2
car$V3[car$V3 == 3] <- var3
car$V3[car$V3 == 4] <- var4
car$V1[car$V1 == 1] <- var1
car$V7[car$V7 == 1] <- var1
car$V7[car$V7 == 2] <- var2
car$V7[car$V7 == 3] <- var3
car$V7[car$V7 == 4] <- var4
car$V4[car$V4 == 1] <- var5
car$V4[car$V4 == 2] <- var6
car$V4[car$V4 == 3] <- var7
var5<- (1-1)/(3-1)
var6<- (2-1)/(3-1)
var7<- (3-1)/(3-1)
car$V4[car$V4 == 1] <- var5
car$V4[car$V4 == 2] <- var6
car$V4[car$V4 == 3] <- var7
car$V5[car$V5 == 1] <- var5
car$V5[car$V5 == 2] <- var6
car$V5[car$V5 == 3] <- var7
car$V6[car$V6 == 1] <- var5
car$V6[car$V6 == 2] <- var6
car$V6[car$V6 == 3] <- var7
car$V7[car$V7 == 1] <- var1
car$V7[car$V7 == 2] <- var2
car$V7[car$V7 == 3] <- var3
car$V7[car$V7 == 4] <- var4
cardist<- daisy(car)
cardist
dtCarsDist <- as.matrix (dist(car))
dtCarsDist
View(dtCarsDist)
cardist <- as.matrix (dist(car))
x <- unique(sort(cardist, decreasing = FALSE))
x
length(x)
unique(sort(cardist))
x<-unique(sort(cardist))
x
x <- unique(sort(cardist, decreasing = FALSE))
x
length(x)
x1 <- which(cardist == x[2], arr.ind = TRUE)
x1
View(x1)
x
str(x)
class(x)
glimpse(x)
car_dist <- as.matrix (dist(car))
x[2]
x[1]
x1 <- which(car_dist == x[2])
, arr.ind = TRUE
x1 <- which(car_dist == x[2], arr.ind = TRUE)
x1
x1
class(x1)
str(x1)
x2
x2 <- which(dtCarsDist == max(dtCarsDist), arr.ind = TRUE)
View(x2)
x1 <- which(car_dist == x[2], arr.ind = TRUE)
x1
View(x1)
{
x1[i, ] = sort(x1[i, ])
}
for (i in 1:nrow(x1))
{
x1[i, ] = sort(x1[i, ])
}
x1
View(x1)
x1 <- which(car_dist == x[2], arr.ind = TRUE)
x1
for (i in 1:nrow(x1))
{
x1[i, ] = sort(x1[i, ])
}
View(x1)
x1 = x1[!duplicated(x1),]
x1
write.csv(x1, file = "similar_cars.csv")
x2 <- which(dtCarsDist == max(dtCarsDist), arr.ind = TRUE)
write.csv(num1, file = "similar_cars.csv")
num1 <- which(car_dist == x[2], arr.ind = TRUE)
class(num1)
str(num1)
num1
#removing opposite pairs
#first sort each row and then remove duplicates
for (i in 1:nrow(num1))
{
num1[i, ] = sort(num1[i, ])
}
num1 = num1[!duplicated(num1),]
num1
write.csv(num1, file = "similar_cars.csv")
num2 <- which(dtCarsDist == max(car_dist), arr.ind = TRUE)
num2
for (i in 1:nrow(num2))
{
num2[i, ] = sort(num2)
}
num2
for (i in 1:nrow(num2))
{
num2[i, ] = sort(num2)
}
num2 <- which(dtCarsDist == max(car_dist), arr.ind = TRUE)
num2
for (i in 1:nrow(num2))
for (i in 1:nrow(num2))
{
num2[i, ] = sort(num2)
}
num2 = num2[!duplicated(num2),]
num2
write.csv(num2, file = "dissimilar_ars.csv")
#Question 3
#
car_cor <- cor(car)
y <- unique(sort(car_cor))
y1 <- which(dtCarsCor == y[2], arr.ind = TRUE)
car_cor <- cor(car)
num3 <- unique(sort(car_cor))
#highest +ve correlation
num4 <- which(car_cor == num3[2], arr.ind = TRUE)
for (i in 1:nrow(num4))
{
num4[i, ] = sort(num4[i, ])
}
num4 = num4[!duplicated(num4),]
num4
plot(car$V6, car$V7, xlab = "Safety", ylab = "Class", main = "Safety vs Class")
good_carsc <- subset(cars, V7 == 1)
good_carsc <- subset(cars, car$V7 == 1)
good_carsc
goo_car_dist <- as.matrix (dist(good_carsc))
good_car_dist
good_car_dist <- as.matrix (dist(good_carsc))
good_car_dist
